package io.github.gabriel.alex.beans;

import org.springframework.stereotype.Component;

@Component
public class CreativeTechnique {
	/**
	 * Name of the creative technique
	 */
	private String name;
	/**
	 * Description of the creative technique (how implement it ... )
	 */
	private String description;
	/**
	 * Quantity (Low, medium, high) of idea generated by the creative technique
	 */
	private String quantityLevel;
	/**
	 * Energy (Low, medium, high) needed to apply the creative technique
	 */
	private String energyLevel;
	/**
	 * Difficulty (Low, medium, high) to implement the creative technique
	 */
	private String difficulty;
	/**
	 * Fun (Low, medium, high) that persons have when applying the creative
	 * technique
	 */
	private String funFactor;
	/**
	 * Degree of novelty (Low, medium, high) of the idea generated by the creative
	 * technique
	 */
	private String novelty;
	/**
	 * Phase in the creative process when the creative technique can be applied
	 */
	private String creativePhase;
	/**
	 * Function of the creative technique
	 */
	private String function;
	/**
	 * Type of input needed to implement the creative technique
	 */
	private String input;
	/**
	 * type of output generated by the creative technique
	 */
	private String output;
	/**
	 * Array of the mode of application of the creative technique. It can contain
	 * one or two lines if it is individual or collective or both.
	 */
	private String[] applicationMode; // collective or individual or both
	/**
	 * Array of the situation the creative technique is preferably applied
	 */
	private String[] applicationContext;
	/**
	 * Duration of the creative technique
	 */
	private int duration;
	/**
	 * Short URI of the creative technique in the ontology - part of the URI after
	 * the #
	 */
	private String shortURI;
	/**
	 * Array of the creative technique related to the instance
	 */
	private String[] relatedTo;
	
	
	
	

	/**
	 * Constructor CreativeTechnique - create an instance with a short URI
	 * 
	 * @param URI
	 */
	public CreativeTechnique(String URI) {
		setShortURI(URI);
	}

	/**
	 * Constructor CreativeTechnique - Create an empty instance of the creative
	 * technique object
	 */
	public CreativeTechnique() {
	}

	public String getShortURI() {
		return shortURI;
	}

	public void setShortURI(String shortURI) {
		this.shortURI = shortURI;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getQuantityLevel() {
		return quantityLevel;
	}

	public void setQuantityLevel(String quantityLevel) {
		this.quantityLevel = quantityLevel;
	}

	public String getEnergyLevel() {
		return energyLevel;
	}

	public void setEnergyLevel(String energyLevel) {
		this.energyLevel = energyLevel;
	}

	public String getDifficulty() {
		return difficulty;
	}

	public void setDifficulty(String difficulty) {
		this.difficulty = difficulty;
	}

	public String getFunFactor() {
		return funFactor;
	}

	public void setFunFactor(String funFactor) {
		this.funFactor = funFactor;
	}

	public String getNovelty() {
		return novelty;
	}

	public void setNovelty(String novelty) {
		this.novelty = novelty;
	}

	public String getCreativePhase() {
		return creativePhase;
	}

	public void setCreativePhase(String creativePhase) {
		this.creativePhase = creativePhase;
	}

	public String getFunction() {
		return function;
	}

	public void setFunction(String function) {
		this.function = function;
	}

	public String getInput() {
		return input;
	}

	public void setInput(String input) {
		this.input = input;
	}

	public String getOutput() {
		return output;
	}

	public void setOutput(String output) {
		this.output = output;
	}

	public String[] getApplicationMode() {
		return applicationMode;
	}

	public void setApplicationMode(String[] applicationMode) {
		this.applicationMode = applicationMode;
	}

	public String[] getApplicationContext() {
		return applicationContext;
	}

	public void setApplicationContext(String[] applicationContext) {
		this.applicationContext = applicationContext;
	}

	public int getDuration() {
		return duration;
	}

	public void setDuration(int duration) {
		this.duration = duration;
	}

}
